{"ast":null,"code":"var _jsxFileName = \"/Users/josephani/digital/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Country = _ref => {\n  let {\n    country: {\n      name,\n      capital,\n      flag,\n      languages,\n      population,\n      currency\n    }\n  } = _ref;\n  const formatedCapital = capital.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Capital: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), capital]\n  }, void 0, true) : '';\n  const formatLanguage = languages.length > 1 ? `Languages` : `Language`;\n  console.log(languages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country_flag\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: flag,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"country_name\",\n      children: name.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"country_text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatedCapital\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [formatLanguage, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), languages.map(language => language.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Population: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), population.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Currency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Country;\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all';\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Component Life Cycle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calling API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There are \", this.state.data.length, \" countries in the api\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countries-wrapper\",\n          children: this.state.data.map(country => /*#__PURE__*/_jsxDEV(Country, {\n            country: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["/Users/josephani/digital/src/index.js"],"names":["React","Component","ReactDOM","Country","country","name","capital","flag","languages","population","currency","formatedCapital","length","formatLanguage","console","log","toUpperCase","map","language","join","toLocaleString","App","state","data","componentDidMount","url","fetch","then","response","json","setState","catch","error","render","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Country = ({\n  country: { name, capital, flag, languages, population, currency },\n}) => {\n  const formatedCapital =\n    capital.length > 0 ? (\n      <>\n        <span>Capital: </span>\n        {capital}\n      </>\n    ) : (\n      ''\n    )\n  const formatLanguage = languages.length > 1 ? `Languages` : `Language`\n  console.log(languages)\n  return (\n    <div className='country'>\n      <div className='country_flag'>\n        <img src={flag} alt={name} />\n      </div>\n      <h3 className='country_name'>{name.toUpperCase()}</h3>\n      <div class='country_text'>\n        <p>{formatedCapital}</p>\n        <p>\n          <span>{formatLanguage}: </span>\n          {languages.map((language) => language.name).join(', ')}\n        </p>\n        <p>\n          <span>Population: </span>\n          {population.toLocaleString()}\n        </p>\n        <p>\n          <span>Currency: </span>\n          {currency}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nclass App extends Component {\n  state = {\n    data: [],\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all'\n    fetch(url)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        console.log(data)\n        this.setState({\n          data,\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>React Component Life Cycle</h1>\n        <h1>Calling API</h1>\n        <div>\n          <p>There are {this.state.data.length} countries in the api</p>\n          <div className='countries-wrapper'>\n            {this.state.data.map((country) => (\n              <Country country={country} />\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}