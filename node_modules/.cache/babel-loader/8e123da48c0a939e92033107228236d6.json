{"ast":null,"code":"var _jsxFileName = \"/Users/josephani/digital/src/index.js\",\n    _s = $RefreshSig$();\n\n// index.js\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Declaring new state variable\n  const [count, setCount] = useState(0);\n\n  const addOne = () => {\n    let value = count + 1;\n    setCount(value);\n  };\n\n  const minusOne = () => {\n    let value = count - 1;\n    setCount(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOne,\n      children: \"Add One\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: minusOne,\n      children: \"Minus One\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/josephani/digital/src/index.js"],"names":["React","useState","ReactDOM","App","count","setCount","addOne","value","minusOne","rootElement","document","getElementById","render"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMK,MAAM,GAAG,MAAM;AACnB,QAAIC,KAAK,GAAGH,KAAK,GAAG,CAApB;AACAC,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAHD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAID,KAAK,GAAGH,KAAK,GAAG,CAApB;AACAC,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,iBAAKH,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAE4C,GAF5C,eAGE;AAAQ,MAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAML,G;;KAAAA,G;AAmBN,MAAMM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAT,QAAQ,CAACU,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBH,WAAzB","sourcesContent":["// index.js\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // Declaring new state variable\n  const [count, setCount] = useState(0)\n  const addOne = () => {\n    let value = count + 1\n    setCount(value)\n  }\n  const minusOne = () => {\n    let value = count - 1\n    setCount(value)\n  }\n  return (\n    <div className='App'>\n      <h1>{count} </h1>\n      <button onClick={addOne}>Add One</button>{' '}\n      <button onClick={minusOne}>Minus One</button>\n    </div>\n  )\n}\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}