[{"/Users/josephani/digital/src/index.js":"1","/Users/josephani/digital/src/App.js":"2"},{"size":8801,"mtime":1644874587745,"results":"3","hashOfConfig":"4"},{"size":146,"mtime":1644618919582,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9"},"yygqg",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephani/digital/src/index.js",["13"],[],"// index.js\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst options = [\n  {\n    value: '',\n    label: '-- Select Country--',\n  },\n  {\n    value: 'Finland',\n    label: 'Finland',\n  },\n  {\n    value: 'Sweden',\n    label: 'Sweden',\n  },\n  {\n    value: 'Norway',\n    label: 'Norway',\n  },\n  {\n    value: 'Denmark',\n    label: 'Denmark',\n  },\n]\n\n// mapping the options to list(array) of JSX options\n\nconst selectOptions = options.map(({ value, label }) => (\n  <option value={value}> {label}</option>\n))\n\nclass App extends Component {\n  // declaring state\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    country: '',\n    tel: '',\n    dateOfBirth: '',\n    favoriteColor: '',\n    weight: '',\n    gender: '',\n    file: '',\n    bio: '',\n    skills: {\n      html: false,\n      css: false,\n      javascript: false,\n    },\n    touched: {\n      firstName: false,\n      lastName: false,\n    },\n  }\n  handleChange = (e) => {\n    /*\n     we can get the name and value like: e.target.name, e.target.value\n    Wwe can also destructure name and value from e.target\n    const name = e.target.name\n    const value = e.target.value\n    */\n    const { name, value, type, checked } = e.target\n    /*\n    [variablename] we can make a value stored in a certain variable could be a key for an object, in this case a key for the state\n    */\n\n    if (type === 'checkbox') {\n      this.setState({\n        skills: { ...this.state.skills, [name]: checked },\n      })\n    } else if (type === 'file') {\n      this.setState({ [name]: e.target.files[0] })\n    } else {\n      this.setState({ [name]: value })\n    }\n  }\n  handleBlur = (e) => {\n    const { name, value } = e.target\n    this.setState({ touched: { ...this.state.touched, [name]: true } })\n  }\n  validate = () => {\n    // Object to collect error feedback and to display on the form\n    const errors = {\n      firstName: '',\n    }\n\n    if (\n      (this.state.touched.firstName && this.state.firstName.length < 3) ||\n      (this.state.touched.firstName && this.state.firstName.length > 12)\n    ) {\n      errors.firstName = 'First name must be between 2 and 12'\n    }\n    return errors\n  }\n  handleSubmit = (e) => {\n    /*\n      e.preventDefault()\n      stops the default behavior of form element \n      specifically refreshing of page\n      */\n    e.preventDefault()\n\n    const {\n      firstName,\n      lastName,\n      email,\n      country,\n      gender,\n      tel,\n      dateOfBirth,\n      favoriteColor,\n      weight,\n      bio,\n      file,\n      skills,\n    } = this.state\n\n    const formattedSkills = []\n    for (const key in skills) {\n      console.log(key)\n      if (skills[key]) {\n        formattedSkills.push(key.toUpperCase())\n      }\n    }\n    const data = {\n      firstName,\n      lastName,\n      email,\n      country,\n      gender,\n      tel,\n      dateOfBirth,\n      favoriteColor,\n      weight,\n      bio,\n      file,\n      skills: formattedSkills,\n    }\n    /*\n     the is the place where we connect backend api\n      to send the data to the database\n      */\n    console.log(data)\n  }\n\n  render() {\n    // accessing the state value by destrutcturing the state\n    // the noValidate attribute on the form is to stop the HTML5 built-in validation\n\n    const { firstName } = this.validate()\n    return (\n      <div className='App'>\n        <h3>Add Student</h3>\n        <form onSubmit={this.handleSubmit} noValidate>\n          <div className='row'>\n            <div className='form-group'>\n              <label htmlFor='firstName'>First Name </label>\n              <input\n                type='text'\n                name='firstName'\n                value={this.state.firstName}\n                onChange={this.handleChange}\n                onBlur={this.handleBlur}\n                placeholder='First Name'\n              />{' '}\n              <br />\n              <small>{firstName}</small>\n            </div>\n            <div className='form-group'>\n              <label htmlFor='lastName'>Last Name </label>\n              <input\n                type='text'\n                name='lastName'\n                value={this.state.lastName}\n                onChange={this.handleChange}\n                placeholder='Last Name'\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='email'>Email </label>\n              <input\n                type='email'\n                name='email'\n                value={this.state.email}\n                onChange={this.handleChange}\n                placeholder='Email'\n              />\n            </div>\n          </div>\n\n          <div className='form-group'>\n            <label htmlFor='tel'>Telephone </label>\n            <input\n              type='tel'\n              name='tel'\n              value={this.state.tel}\n              onChange={this.handleChange}\n              placeholder='Tel'\n            />\n          </div>\n\n          <div className='form-group'>\n            <label htmlFor='dateOfBirth'>Date of birth </label>\n            <input\n              type='date'\n              name='dateOfBirth'\n              value={this.state.dateOfBirth}\n              onChange={this.handleChange}\n              placeholder='Date of Birth'\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='favoriteColor'>Favorite Color</label>\n            <input\n              type='color'\n              id='favoriteColor'\n              name='favoriteColor'\n              value={this.state.favoriteColor}\n              onChange={this.handleChange}\n              placeholder='Favorite Color'\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='weight'>Weight </label>\n            <input\n              type='number'\n              id='weight'\n              name='weight'\n              value={this.state.weight}\n              onChange={this.handleChange}\n              placeholder='Weight in Kg'\n            />\n          </div>\n          <div>\n            <label htmlFor='country'>Country</label> <br />\n            <select name='country' onChange={this.handleChange} id='country'>\n              {selectOptions}\n            </select>\n          </div>\n\n          <div>\n            <p>Gender</p>\n            <div>\n              <input\n                type='radio'\n                id='female'\n                name='gender'\n                value='Female'\n                onChange={this.handleChange}\n                checked={this.state.gender === 'Female'}\n              />\n              <label htmlFor='female'>Female</label>\n            </div>\n            <div>\n              <input\n                id='male'\n                type='radio'\n                name='gender'\n                value='Male'\n                onChange={this.handleChange}\n                checked={this.state.gender === 'Male'}\n              />\n              <label htmlFor='male'>Male</label>\n            </div>\n            <div>\n              <input\n                id='other'\n                type='radio'\n                name='gender'\n                value='Other'\n                onChange={this.handleChange}\n                checked={this.state.gender === 'Other'}\n              />\n              <label htmlFor='other'>Other</label>\n            </div>\n          </div>\n\n          <div>\n            <p>Select your skills</p>\n            <div>\n              <input\n                type='checkbox'\n                id='html'\n                name='html'\n                onChange={this.handleChange}\n              />\n              <label htmlFor='html'>HTML</label>\n            </div>\n            <div>\n              <input\n                type='checkbox'\n                id='css'\n                name='css'\n                onChange={this.handleChange}\n              />\n              <label htmlFor='css'>CSS</label>\n            </div>\n            <div>\n              <input\n                type='checkbox'\n                id='javascript'\n                name='javascript'\n                onChange={this.handleChange}\n              />\n              <label htmlFor='javascript'>JavaScript</label>\n            </div>\n          </div>\n          <div>\n            <label htmlFor='bio'>Bio</label> <br />\n            <textarea\n              id='bio'\n              name='bio'\n              value={this.state.bio}\n              onChange={this.handleChange}\n              cols='120'\n              rows='10'\n              placeholder='Write about yourself ...'\n            />\n          </div>\n\n          <div>\n            <input type='file' name='file' onChange={this.handleChange} />\n          </div>\n          <div>\n            <button>Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n","/Users/josephani/digital/src/App.js",[],[],{"ruleId":"14","severity":1,"message":"15","line":81,"column":19,"nodeType":"16","messageId":"17","endLine":81,"endColumn":24},"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar"]